---


- include_tasks: "swap.yml"

- name: "Set DNS servers"
  copy:
    dest: /etc/resolv.conf
    content: |
      nameserver 1.1.1.1


- name: "Install required packages for install NodeJS"
  apt:
    name: "{{ item }}"
    state: present
  loop:
    "{{ REQUIRED_PACKGES_BEFORE_INSTALLING_NODEJS }}"


- name: Update all packages
  apt:
    name: "*"
    state: latest

- name: "Create keyring dir"
  file:
    path: /etc/apt/keyrings
    state: directory

- name: "Add NodeJS apt signing key"
  apt_key:
    url: "https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key"
    keyring: "/etc/apt/keyrings/nodesource.gpg"
      #state: present

- name: "Add NodeJS Deb repository"
  apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_16.x nodistro main"
    state: present

- name: "Check if ghost site is already installed"
  stat:
    path: "/var/www/{{ SITE_NAME }}/config.production.json"
  register: ghost_config

- name: "Install NodeJS"
  apt:
    name: nodejs
    state: present
    update_cache: yes
  when: not ghost_config.stat.exists

- name: "Install Ghost Npm modules"
  community.general.npm:
    name: "ghost-cli"
    state: "latest"
    global: true
  when: not ghost_config.stat.exists

- name: Allow 'sudo' group to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%sudo'
    line: '%sudo ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'
  when: not ghost_config.stat.exists

- name: "Create installer user"
  user:
    name: "ghost_installer"
    comment: "Ghost Installer"
    shell: /bin/bash
    create_home: yes
    groups: sudo
    append: yes
  when: not ghost_config.stat.exists


- name: "Create direcrory for files hosting"
  file:
    path: "/var/www/{{ SITE_NAME }}"
    state: directory
    owner: ghost_installer
    group: ghost_installer
    mode: '0775'
  when: not ghost_config.stat.exists

- name: "Rust Ghost install shell command"
  become: true
  become_user: ghost_installer
  shell: "ghost install --no-prompt --ip 0.0.0.0 --url http://{{ root_fqdn }} --db mysql --dbhost {{ db_fqdn }} --dbuser ghost --dbpass Pass123@ --dbname ghost --no-setup-nginx --no-setup-ssl"
  args:
    chdir: "/var/www/{{ SITE_NAME }}"
  when: not ghost_config.stat.exists
